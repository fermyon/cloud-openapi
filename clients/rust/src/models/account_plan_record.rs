/*
 * Fermyon Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountPlanRecord {
    #[serde(rename = "accountType", skip_serializing_if = "Option::is_none")]
    pub account_type: Option<models::AccountPlanType>,
    #[serde(rename = "cancelAt", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cancel_at: Option<Option<String>>,
    #[serde(rename = "cycleStartDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cycle_start_date: Option<Option<String>>,
    #[serde(rename = "cycleEndDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cycle_end_date: Option<Option<String>>,
    #[serde(rename = "lastModified", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_modified: Option<Option<String>>,
}

impl AccountPlanRecord {
    pub fn new() -> AccountPlanRecord {
        AccountPlanRecord {
            account_type: None,
            cancel_at: None,
            cycle_start_date: None,
            cycle_end_date: None,
            last_modified: None,
        }
    }
}

