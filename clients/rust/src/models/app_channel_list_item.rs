/*
 * Fermyon Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AppChannelListItem {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "activeRevisionNumber", skip_serializing_if = "Option::is_none")]
    pub active_revision_number: Option<String>,
    #[serde(rename = "domain", skip_serializing_if = "Option::is_none")]
    pub domain: Option<String>,
    #[serde(rename = "created")]
    pub created: String,
    #[serde(rename = "healthStatus", skip_serializing_if = "Option::is_none")]
    pub health_status: Option<models::ApiHealthStatus>,
    #[serde(rename = "lastModified", skip_serializing_if = "Option::is_none")]
    pub last_modified: Option<String>,
}

impl AppChannelListItem {
    pub fn new(id: uuid::Uuid, name: String, created: String) -> AppChannelListItem {
        AppChannelListItem {
            id,
            name,
            active_revision_number: None,
            domain: None,
            created,
            health_status: None,
            last_modified: None,
        }
    }
}

